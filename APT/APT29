rule apt29_QUARTERRIG {
 strings:
 	$str_dll_name = "hijacker.dll"
 	$str_import_name = "VCRUNTIME140.dll"
 // 48 8B 15 39 6A 00 00 mov rdx, cs:api_stuff.OpenThread
 // 48 8D 0D FA 68 00 00 lea rcx, api_stuff
 // 8B D8 mov ebx, eax
 // E8 3F 25 00 00 call load_api_addr
 // 44 8B C3 mov r8d, ebx
 // 33 D2 xor edx, edx
 // B9 FF FF 1F 00 mov ecx, 1FFFFFh
 // FF D0 call rax
 	$op_resolve_and_call_openthread = { 48 [6] 48 [6] 8B D8 E8 [4] [3] 33 D2 B9 FF FF 1F 00 FF D0 }
 // E8 A0 25 00 00 call load_api_addr
 // 48 8B CB mov rcx, rbx
 // FF D0 call rax
 // 83 F8 FF cmp eax, 0FFFFFFFFh
 	$op_resolve_and_call_suspendthread = { E8 [4] 48 8B CB FF D0 83 F8 FF }
 condition:
 	all of them
}

rule APT29_SNOWYAMBER 
{
meta:
	description = "Detects APT29-linked SNOWYAMBER dropper"
	strings:
// Payload decryption loop
// Custom algorithm based on XOR
	$op_decrypt_payload = {49 8B 45 08 48 ?? ?? ?? 48 39 ?? 76 2B 48 89 C8 31 D2 4C 8B 4C 24 ?? 48 F7 74 24 ?? 49 8B 45 00 41 8A 14 11 32 54 08 10 89 C8 41 0F AF C0 31 C2 88 14 0B 48 FF C1}
// Decryption routine generated by Obfuscate library
	$op_decrypt_string = {48 39 D0 74 19 48 89 C1 4D 89 C2 83 E1 07 48 C1 E1 03 49 D3 EA 45 30 14 01 48 FF C0 EB E2}
// Hardcoded inital value used as beaconing counter
	$op_initialize_emoji = {C6 [3] A5 66 [4] F0 9F} 
// src/json.hpp - string left in binary using nlohmann JSON
	$str_nlohmann = {73 72 63 2F 6A 73 6F 6E 2E 68 70 70 00}
condition:
	uint16(0) == 0x5A4D 
	and 
	 filesize < 500KB
	and 
	 $str_nlohmann 
	and 
	 $op_decrypt_string 
	and 
	 ($op_initialize_emoji or $op_decrypt_payload)
}
